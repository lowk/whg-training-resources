"use strict";(self.webpackChunkwhg_training_resources=self.webpackChunkwhg_training_resources||[]).push([[8485],{3905:(e,n,t)=>{t.d(n,{Zo:()=>g,kt:()=>c});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),m=p(t),c=a,d=m["".concat(l,".").concat(c)]||m[c]||u[c]||i;return t?r.createElement(d,o(o({ref:n},g),{},{components:t})):r.createElement(d,o({ref:n},g))}));function c(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6457:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:16},o="Appendix: visualisation",s={unversionedId:"programming/programming_with_gene_annotations/Visualisation",id:"programming/programming_with_gene_annotations/Visualisation",title:"Appendix: visualisation",description:"Up to table of contents",source:"@site/docs/programming/programming_with_gene_annotations/Visualisation.md",sourceDirName:"programming/programming_with_gene_annotations",slug:"/programming/programming_with_gene_annotations/Visualisation",permalink:"/whg-training-resources/programming/programming_with_gene_annotations/Visualisation",draft:!1,editUrl:"https://github.com/whg-training/whg-training-resources/edit/main/docs/programming/programming_with_gene_annotations/Visualisation.md",tags:[],version:"current",sidebarPosition:16,frontMatter:{sidebar_position:16},sidebar:"tutorialSidebar",previous:{title:"Appendix: a list of Ensembl GFF files.",permalink:"/whg-training-resources/programming/programming_with_gene_annotations/List_of_ensembl_files"},next:{title:"Data visualisation",permalink:"/whg-training-resources/data_visualisation/"}},l={},p=[{value:"Conclusion",id:"conclusion",level:2}],g={toc:p};function u(e){let{components:n,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},g,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"appendix-visualisation"},"Appendix: visualisation"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/programming_with_gene_annotations/"},"Up to table of contents")),(0,a.kt)("p",null,"It would be very nice to plot some of the values we've computed! For example - gene length versus\nnumber of exons, or gene length versus number of transcripts, or genome size versus number of\ngenes, and so on."),(0,a.kt)("p",null,"Data visualisation is really beyond the scope of this tutorial. However, as a quick example, here is how you might plot some of\nthese values in R using ",(0,a.kt)("a",{parentName:"p",href:"https://ggplot2.tidyverse.org"},"ggplot2"),". (You need to have created the\n",(0,a.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/programming_with_gene_annotations/Counting_genes_2#a-sqlite-approach"},"SQL summaries")," first.)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-R"},'library( RSQLite )\nlibrary( ggplot2 )\ndb = DBI::dbConnect( RSQLite::SQLite(), "genes.sqlite" )\ndata = dbGetQuery( db, "SELECT * FROM gene_summary_view" )\ndata$length = data$end - data$start + 1\n\np = (\n   ggplot( data = data )\n   + geom_point( aes( x = end - start + 1, y = average_number_of_exons, col = analysis ))\n   + xlab( "Gene length" )\n   + ylab( "Number of exons" )\n   + facet_wrap( ~analysis )\n)\n\nggsave( p, file = "gene_length_versus_number_of_exons.pdf", width = 8, height = 5 )\n')),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(9821).Z,width:"1200",height:"600"})),(0,a.kt)("p",null,"In python, you could instead try using  ",(0,a.kt)("a",{parentName:"p",href:"https://matplotlib.org"},"matplotlib"),". I'd like to\ninclude a matplotlib example here but don't have one - let me know if you write one!"),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"That's the end of this tutorial!  You can read some ",(0,a.kt)("a",{parentName:"p",href:"/whg-training-resources/programming/programming_with_gene_annotations/Closing_thoughts"},"closing thoughts"),"."))}u.isMDXComponent=!0},9821:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/visualisation_example-b72882486c8b72588c5e35a3f70a1b6b.png"}}]);